diff --git a/app/config/services.yml b/app/config/services.yml
index 5c76fc5..4861b57 100644
--- a/app/config/services.yml
+++ b/app/config/services.yml
@@ -4,6 +4,8 @@ parameters:
 #    parameter_name: value
 
 services:
-#    service_name:
-#        class: AppBundle\Directory\ClassName
-#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]
+    app.type.issue_selector:
+        class: AppBundle\Form\IssueSelectorType
+        arguments: ["@doctrine.orm.default_entity_manager"]
+        tags:
+            - { name: form.type, alias: issue_selector }
diff --git a/src/AppBundle/Controller/TaskController.php b/src/AppBundle/Controller/TaskController.php
index 83f78d8..df52600 100644
--- a/src/AppBundle/Controller/TaskController.php
+++ b/src/AppBundle/Controller/TaskController.php
@@ -17,7 +17,7 @@ class TaskController extends Controller
     {
         $em = $this->getDoctrine()->getManager();
         $task = new Task();
-        $form = $this->createForm(new TaskType($em), $task);
+        $form = $this->createForm(new TaskType(), $task);
 
         $form->handleRequest($request);
         if ($form->isValid()) {
@@ -40,7 +40,7 @@ class TaskController extends Controller
     public function editAction(Task $task, Request $request)
     {
         $em = $this->getDoctrine()->getManager();
-        $form = $this->createForm(new TaskType($em), $task);
+        $form = $this->createForm(new TaskType(), $task);
 
         $form->handleRequest($request);
         if ($form->isValid()) {
diff --git a/src/AppBundle/Form/IssueSelectorType.php b/src/AppBundle/Form/IssueSelectorType.php
new file mode 100644
index 0000000..efec358
--- /dev/null
+++ b/src/AppBundle/Form/IssueSelectorType.php
@@ -0,0 +1,42 @@
+<?php
+
+namespace AppBundle\Form;
+
+use AppBundle\Form\DataTransformer\IssueToNumberTransformer;
+use Doctrine\Common\Persistence\ObjectManager;
+use Symfony\Component\Form\AbstractType;
+use Symfony\Component\Form\FormBuilderInterface;
+use Symfony\Component\OptionsResolver\OptionsResolverInterface;
+
+class IssueSelectorType extends AbstractType
+{
+    private $em;
+
+    public function __construct(ObjectManager $em)
+    {
+        $this->em = $em;
+    }
+
+    public function buildForm(FormBuilderInterface $builder, array $options)
+    {
+        $transformer = new IssueToNumberTransformer($this->em);
+        $builder->addModelTransformer($transformer);
+    }
+
+    public function setDefaultOptions(OptionsResolverInterface $resolver)
+    {
+        $resolver->setDefaults(array(
+            'invalid_message' => 'The selected issue does not exist',
+        ));
+    }
+
+    public function getParent()
+    {
+        return 'text';
+    }
+
+    public function getName()
+    {
+        return 'issue_selector';
+    }
+}
diff --git a/src/AppBundle/Form/TaskType.php b/src/AppBundle/Form/TaskType.php
index 15eb33d..8aab08f 100644
--- a/src/AppBundle/Form/TaskType.php
+++ b/src/AppBundle/Form/TaskType.php
@@ -2,8 +2,6 @@
 
 namespace AppBundle\Form;
 
-use AppBundle\Form\DataTransformer\IssueToNumberTransformer;
-use Doctrine\Common\Persistence\ObjectManager;
 use Symfony\Component\Form\AbstractType;
 use Symfony\Component\Form\CallbackTransformer;
 use Symfony\Component\Form\FormBuilderInterface;
@@ -11,21 +9,11 @@ use Symfony\Component\OptionsResolver\OptionsResolver;
 
 class TaskType extends AbstractType
 {
-    private $em;
-
-    public function __construct(ObjectManager $em)
-    {
-        $this->em = $em;
-    }
-
     public function buildForm(FormBuilderInterface $builder, array $options)
     {
         $builder
             ->add('description', 'textarea')
-            ->add('issue', 'text', array(
-                // validation message if the data transformer fails
-                'invalid_message' => 'That is not a valid issue number'
-            ));
+            ->add('issue', 'issue_selector');
 
         $builder->get('description')
             ->addModelTransformer(new CallbackTransformer(
@@ -41,9 +29,6 @@ class TaskType extends AbstractType
                     return str_replace("\n", '<br/>', $cleaned);
                 }
             ));
-
-        $builder->get('issue')
-            ->addModelTransformer(new IssueToNumberTransformer($this->em));
     }
 
     public function configureOptions(OptionsResolver $resolver)
